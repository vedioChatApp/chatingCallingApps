# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!

# Pods ‡§ï‡•ã static frameworks ‡§ï‡•Ä ‡§§‡§∞‡§π ‡§≤‡§ø‡§Ç‡§ï ‡§ï‡§∞‡•á‡§Ç
use_frameworks! :linkage => :static

target 'chatingCallingApp' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    # Reanimated/AsyncStorage ‡§Ü‡§¶‡§ø ‡§ï‡•á ‡§≤‡§ø‡§è New Arch ON
    :new_arch_enabled => true
  )

  post_install do |installer|
    # RN ‡§ï‡•á default post-install fixes
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )

    # üîß Global build settings (non-modular includes allow + iOS 13)
    installer.pods_project.targets.each do |t|
      t.build_configurations.each do |bc|
        bc.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
        bc.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
        bc.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
        # ‚úÖ C++20 ‡§ö‡§æ‡§π‡§ø‡§è ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø code .contains() ‡§Ø‡•Ç‡§ú‡§º ‡§ï‡§∞‡§§‡§æ ‡§π‡•à
        bc.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'gnu++20' # fallback: 'gnu++2a'
        # Swift version default
        bc.build_settings['SWIFT_VERSION'] = '5.0'
      end
    end

    # üß© ‡§ï‡•Å‡§õ pods ‡§ï‡•ã module define ‡§ï‡§∞‡•á‡§Ç (headers resolve ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶)
    %w[
      RNScreens
      react_renderer_core
      React-RCTFabric
      React-Fabric
      React-debug
      React-utils
      React-runtimescheduler
      React-rendererdebug
      React-rendererconsistency
      React-runtimeexecutor
      React-perflogger
      React-hermes
      React-jsi
      React-jsiexecutor
      React-jsinspector
      Yoga
      RCT-Folly
    ].each do |name|
      target = installer.pods_project.targets.find { |t| t.name == name }
      next unless target
      target.build_configurations.each do |bc|
        bc.build_settings['DEFINES_MODULE'] = 'YES'
      end
    end
  end
end
